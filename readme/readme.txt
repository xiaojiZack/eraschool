
--------log---------
2021/12/31
考研的时候就一直想做一款era了，但是由于复习繁忙，就一直挂着，待万事落定之后，希望能有更多的时间来干这个事情。只有经历考研以后，才会发现时间的充裕，
过去早上七点的太阳，和晚上十点的繁星，希望在接下来的日子里还能有你们作伴。
当然，大概率是不会有这个毅力的，233

大体上的框架：
资源->设施、技术->商品->资源、技术、设施

1.好玩的关键在于资源和科技丰富，能让人期待下一项科技是什么，而不是存粹重复的劳动。人物的口上其实也是很重要的，但其实和题材不太符合，因为设计上一批人才
出货时间是有期限的。也许可以通过一些解锁项目实现这个限制更加松弛一点，或者可以少出货一些商品用来反哺设施发展。
2.三个方向的设施发展，三个代表的固定人物，可以与固定人物进行交流和好感度系统，也许可以做多结局的end？（这个想法不错）
3.政策和处刑、服从度和反发度和欲望度（或许应该分成每个人来进行结算？而不是一味的进行整体判断，但这样会增加运行负担）、全体上课和单独培养、设施的组合布局
4.尝试加入一些特殊事件组，可以送一些特殊人才和特殊项目。通过特殊项目解锁新的固定人物。
5.成就系统和报纸通知风格。

几个存档实体：
资源，解锁项目、建筑布局、人物卡、政策、特殊事件flag

全局存档：
成就、设置配置

2022/1/1
元旦快乐

建筑布局的实现：
其实与其追求二维化（这样不好实现，效果也不好看），不如尝试一维的排列组合或者环形的排布，部分装饰性建筑作为建筑加成挂件(考虑中），加成辐射类建筑作为独立
建筑存在
关于建筑的解锁项目除了解锁建筑以外，也可以扩容建筑列表（表现为学院地皮扩容），多个建筑列表（学院区划），
或许可以做些升维，比如一开始是零维的，仅表示建筑个数，随后升维到一维，表示建筑的相邻。（先把这些工作做了吧）
建筑的属性：
1.名称 2.类型 3.位置（预留） 4.挂件加成（预留）

数据结构：
模板-》生成实体-》注册到建筑表

存读档：
存档时类对象实例序列化为字典,读档时清除所有tmp，并且覆盖sav，执行初始化操作重新生成实例，实例存储在tmp中。实例化和反实例化方法（作为构造函数）是作为类
方法存在。
或者类内所有属性对象本身组成一个字典，可以省去实例化过程。

建筑蓝图（底层类模板）组成一个字典，建筑建造时生成序列字典，通过序列字典的类型值生成对应实例。放在建筑相关调用库里。建筑功能应当表现为跟随蓝图的install,
uninstall方法，置事件标志位或者加成的建筑布局总体数值。建筑间的联动buff划定为事件，当建筑install或unintall时update建筑buff事件组，组合buff的效果
不一定非要和该组合位置相关。
   blue_pic = {"1":test1, "2":test2}
    x = blue_pic["1"]()

部分建筑install的标志位是执行某些指令或者进入某些页面或发生某些事件的标志。

2022/1/2
github搞半天，其实只保存自己写的部分就好了，没必要一整个工程弄下来
debug模块完善的差不多了，可以在前端修改后端数据了，但是目前只支持非对象数据结构。
