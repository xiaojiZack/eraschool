
--------log---------
2021/12/31
考研的时候就一直想做一款era了，但是由于复习繁忙，就一直挂着，待万事落定之后，希望能有更多的时间来干这个事情。只有经历考研以后，才会发现时间的充裕，
过去早上七点的太阳，和晚上十点的繁星，希望在接下来的日子里还能有你们作伴。
当然，大概率是不会有这个毅力的，233

大体上的框架：
资源->设施、技术->商品->资源、技术、设施

1.好玩的关键在于资源和科技丰富，能让人期待下一项科技是什么，而不是存粹重复的劳动。人物的口上其实也是很重要的，但其实和题材不太符合，因为设计上一批人才
出货时间是有期限的。也许可以通过一些解锁项目实现这个限制更加松弛一点，或者可以少出货一些商品用来反哺设施发展。
2.三个方向的设施发展，三个代表的固定人物，可以与固定人物进行交流和好感度系统，也许可以做多结局的end？（这个想法不错）
3.政策和处刑、服从度和反发度和欲望度（或许应该分成每个人来进行结算？而不是一味的进行整体判断，但这样会增加运行负担）、全体上课和单独培养、设施的组合布局
4.尝试加入一些特殊事件组，可以送一些特殊人才和特殊项目。通过特殊项目解锁新的固定人物。
5.成就系统和报纸通知风格。

几个存档实体：
资源，解锁项目、建筑布局、人物卡、政策、特殊事件flag

全局存档：
成就、设置配置

2022/1/1
元旦快乐

建筑布局的实现：
其实与其追求二维化（这样不好实现，效果也不好看），不如尝试一维的排列组合或者环形的排布，部分装饰性建筑作为建筑加成挂件(考虑中），加成辐射类建筑作为独立
建筑存在
关于建筑的解锁项目除了解锁建筑以外，也可以扩容建筑列表（表现为学院地皮扩容），多个建筑列表（学院区划），
或许可以做些升维，比如一开始是零维的，仅表示建筑个数，随后升维到一维，表示建筑的相邻。（先把这些工作做了吧）
建筑的属性：
1.名称 2.类型 3.位置（预留） 4.挂件加成（预留）

数据结构：
模板-》生成实体-》注册到建筑表

存读档：
存档时类对象实例序列化为字典,读档时清除所有tmp，并且覆盖sav，执行初始化操作重新生成实例，实例存储在tmp中。实例化和反实例化方法（作为构造函数）是作为类
方法存在。
或者类内所有属性对象本身组成一个字典，可以省去实例化过程。

建筑蓝图（底层类模板）组成一个字典，建筑建造时生成序列字典，通过序列字典的类型值生成对应实例。放在建筑相关调用库里。建筑功能应当表现为跟随蓝图的install,
uninstall方法，置事件标志位或者加成的建筑布局总体数值。建筑间的联动buff划定为事件，当建筑install或unintall时update建筑buff事件组，组合buff的效果
不一定非要和该组合位置相关。
   blue_pic = {"1":test1, "2":test2}
    x = blue_pic["1"]()

部分建筑install的标志位是执行某些指令或者进入某些页面或发生某些事件的标志。

2022/1/2
github搞半天，其实只保存自己写的部分就好了，没必要一整个工程弄下来
debug模块完善的差不多了，可以在前端修改后端数据了，但是目前只支持非对象数据结构。

2022/1/4
1.人物卡，大体上还是采用传统era的设计，通过各种行为积攒**之珠，然后通过**之珠升级刻印。
2.人物的特质，如性格，身体特征，经验
3.部分器官的特征不用单独写个类，直接写在人物卡的特质属性栏里，作为一个字典。
4.人物卡作为类仅以data：字典，和类方法组成，方便序列化为存档和读档生成。人物的生成注册、存读档、删除操作都由独立函数控制
5.人物卡在tmp['character']：字典中以人物编号为序列排列
6.人物卡的属性修改都由人物卡的类方法实现。
7.部分判断，如器官有无，事件有无，作为flag值键对在data字典中
8.人物卡应当包含的元素：编号；姓名；性别；基础身体特征：身高体重三围；特征；器官列表（包含器官的一些具体属性）；**珠（我觉得应该改叫**记忆）；刻印；
经验；服饰装具；口上编号；目前状态：是否可用、是否堕落；子系统列表：yw系统、基因系统（如果有精力搞的话），服从系统：综合刻印、经验、建筑加成来生成的指数
太低的话高难度的政策和授课内容无法执行，且日常学习效率会降低；学历系统：作为本作特色系统记录入学情况、学习情况（多种方向，美妆，厨艺等正常科目
和其他科目）、分配科室（班级）、社团比赛、奖惩记录、志愿方向

2022/1/7
解锁项目大体上分为三个阶段，对应三个固定人物。每个固定人物的登场由特殊事件产生，且需要达成某些条件。条件包括学园考核的一些规模，一些前置解锁项目或者
任务。
有事件类的设定，春日活动，夏季休学旅行，秋日活动，冬日室内活动
校园的经营：

2022/1/16
要正式开始写东西了
机器应该算自慰吧
将做饭、歌舞、美妆放到学业系统里
完成人物卡模板，初步测试可以完成序列化

2022/1/18
一个季节为14'天'，游戏里的‘一天’为一周，一年共56个操作周期
测试说明，从诸如sav（）里取得的对象实体可以不用送回sav（）
而int等基本变量需要送回原处
应该是python本身的性值，当赋值为对象时，变量表现为指针
而赋值为基本变量时，赋值实际上是复制操作
控件似乎不能传入对象变量
是时候放弃类了
关于python的引用，只有list和dist等对象会被引用，而int，bool，str
等会被复制，而对象的复制由copy（）和deepcopy（）实现

2022/1/19
角色的技巧表示：采用经验而非单纯的**技巧来表示
学业系统的几个科目：1.服从与欲望 2.身体开发 3.榨精力 4.个性科目

2022/1/22
学业系统，学习成绩的：
1.服从与欲望：基础服从判定数值，服从*5+欲望*5+刻印加成+堕落加成
2.身体开发水平：按照出售算法计算
3.榨精力：手交、口交、乳交、素股、足交、腔、肛标准榨精倍数之和
4.个性科目：其他所有多余的项目
先完成指令实现的过程吧
指令包含：指令实行判定，指令效果结算，
大部分还是采用传统的指令方法
但是加入状态显示、持续执行、使用频率统计

2022/1/25
#FFC1C1 粉红
#FF00FF 紫色
#CD00CD 深紫
a.progress(50,100,style=[{'color':'#FFC1C1'},{'background-color': '#FFC1C1'}])
明天做指令系统